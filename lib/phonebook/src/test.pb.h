/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_PROTOBLOG_PROTO_TEST_PB_H_INCLUDED
#define PB_PROTOBLOG_PROTO_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _protoblog_TestMessageWithoutOptions {
    int32_t number;
    int32_t address;
    int32_t whatf;
} protoblog_TestMessageWithoutOptions;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define protoblog_TestMessageWithoutOptions_init_default {0, 0, 0}
#define protoblog_TestMessageWithoutOptions_init_zero {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define protoblog_TestMessageWithoutOptions_number_tag 1
#define protoblog_TestMessageWithoutOptions_address_tag 2
#define protoblog_TestMessageWithoutOptions_whatf_tag 3

/* Struct field encoding specification for nanopb */
#define protoblog_TestMessageWithoutOptions_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    number,            1) \
X(a, STATIC,   SINGULAR, INT32,    address,           2) \
X(a, STATIC,   SINGULAR, INT32,    whatf,             3)
#define protoblog_TestMessageWithoutOptions_CALLBACK NULL
#define protoblog_TestMessageWithoutOptions_DEFAULT NULL

extern const pb_msgdesc_t protoblog_TestMessageWithoutOptions_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define protoblog_TestMessageWithoutOptions_fields &protoblog_TestMessageWithoutOptions_msg

/* Maximum encoded size of messages (where known) */
#define PROTOBLOG_PROTO_TEST_PB_H_MAX_SIZE       protoblog_TestMessageWithoutOptions_size
#define protoblog_TestMessageWithoutOptions_size 33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
